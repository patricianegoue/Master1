Terminaux inutilisés dans la grammaire

    OPERATEUR
    IDFONCTION
    BOUCLE
    COND
    SEPVAR
    SYMBOLE
    TYPE
    COMPARAISON
    MOINS
    DIVISER
    SUPEGALE
    INFEGALE


État 1 conflits: 6 décalage/réduction
État 10 conflits: 6 décalage/réduction, 1 réduction/réduction
État 25 conflits: 4 décalage/réduction


Grammaire

    0 $accept: prog $end

    1 prog: DEBUTPROGRAMME corps FINPROGRAMME

    2 corps: expr corps
    3      | expr

    4 expr: binst
    5     | binstsi
    6     | blocBoucle

    7 binst: inst SEPINSTR
    8      | inst SEPINSTR binst

    9 inst: ECRIRE VARIABLE
   10     | LIRE VARIABLE
   11     | COMPTER VARIABLE
   12     | VARIABLE AFFECTATION CONDITION
   13     | VARIABLE AFFECTATION SECONDMEMBRE

   14 SECONDMEMBRE: T
   15             | SECONDMEMBRE PLUS T

   16 T: TERME
   17  | T FOIS TERME
   18  | T MODULO TERME

   19 TERME: VARIABLE
   20      | NOMBRE

   21 binstsi: SI CONDITION alo expr finsi
   22        | SI CONDITION alo expr sino expr finsi

   23 finsi: FSI

   24 alo: ALORS

   25 sino: SINON

   26 blocBoucle: %empty
   27           | TANTQUE etiqueBoucle exp_bool debutboucle blocIntBoucle finboucle

   28 blocIntBoucle: binst
   29              | binstsi
   30              | binstsi blocIntBoucle
   31              | binst blocIntBoucle

   32 etiqueBoucle: %empty

   33 debutboucle: FAIRE

   34 exp_bool: CONDITION

   35 finboucle: FAIT

   36 CONDITION: %empty
   37          | '(' TERME EGALE TERME ')'
   38          | '(' TERME DIFFERENT TERME ')'
   39          | '(' TERME INFERIEUR TERME ')'
   40          | '(' TERME SUPERIEUR TERME ')'


Terminaux, suivis des règles où ils apparaissent

    $end (0) 0
    '(' (40) 37 38 39 40
    ')' (41) 37 38 39 40
    error (256)
    DEBUTPROGRAMME (258) 1
    FINPROGRAMME (259) 1
    NOMBRE (260) 20
    OPERATEUR (261)
    VARIABLE (262) 9 10 11 12 13 19
    IDFONCTION (263)
    TANTQUE (264) 27
    FAIRE (265) 33
    FAIT (266) 35
    ALORS (267) 24
    BOUCLE (268)
    COND (269)
    SEPVAR (270)
    SEPINSTR (271) 7 8
    SYMBOLE (272)
    TYPE (273)
    AFFECTATION (274) 12 13
    SI (275) 21 22
    FSI (276) 23
    SINON (277) 25
    COMPARAISON (278)
    PLUS (279) 15
    MOINS (280)
    FOIS (281) 17
    DIVISER (282)
    EGALE (283) 37
    SUPERIEUR (284) 40
    INFERIEUR (285) 39
    DIFFERENT (286) 38
    SUPEGALE (287)
    INFEGALE (288)
    LIRE (289) 10
    ECRIRE (290) 9
    COMPTER (291) 11
    MODULO (292) 18


Non-terminaux, suivis des règles où ils apparaissent

    $accept (40)
        à gauche: 0
    prog (41)
        à gauche: 1
        à droite: 0
    corps (42)
        à gauche: 2 3
        à droite: 1 2
    expr (43)
        à gauche: 4 5 6
        à droite: 2 3 21 22
    binst (44)
        à gauche: 7 8
        à droite: 4 8 28 31
    inst (45)
        à gauche: 9 10 11 12 13
        à droite: 7 8
    SECONDMEMBRE (46)
        à gauche: 14 15
        à droite: 13 15
    T (47)
        à gauche: 16 17 18
        à droite: 14 15 17 18
    TERME (48)
        à gauche: 19 20
        à droite: 16 17 18 37 38 39 40
    binstsi (49)
        à gauche: 21 22
        à droite: 5 29 30
    finsi (50)
        à gauche: 23
        à droite: 21 22
    alo (51)
        à gauche: 24
        à droite: 21 22
    sino (52)
        à gauche: 25
        à droite: 22
    blocBoucle (53)
        à gauche: 26 27
        à droite: 6
    blocIntBoucle (54)
        à gauche: 28 29 30 31
        à droite: 27 30 31
    etiqueBoucle (55)
        à gauche: 32
        à droite: 27
    debutboucle (56)
        à gauche: 33
        à droite: 27
    exp_bool (57)
        à gauche: 34
        à droite: 27
    finboucle (58)
        à gauche: 35
        à droite: 27
    CONDITION (59)
        à gauche: 36 37 38 39 40
        à droite: 12 21 22 34


État 0

    0 $accept: . prog $end

    DEBUTPROGRAMME  décalage et aller à l'état 1

    prog  aller à l'état 2


État 1

    1 prog: DEBUTPROGRAMME . corps FINPROGRAMME

    VARIABLE  décalage et aller à l'état 3
    TANTQUE   décalage et aller à l'état 4
    SI        décalage et aller à l'état 5
    LIRE      décalage et aller à l'état 6
    ECRIRE    décalage et aller à l'état 7
    COMPTER   décalage et aller à l'état 8

    VARIABLE  [réduction par utilisation de la règle 26 (blocBoucle)]
    TANTQUE   [réduction par utilisation de la règle 26 (blocBoucle)]
    SI        [réduction par utilisation de la règle 26 (blocBoucle)]
    LIRE      [réduction par utilisation de la règle 26 (blocBoucle)]
    ECRIRE    [réduction par utilisation de la règle 26 (blocBoucle)]
    COMPTER   [réduction par utilisation de la règle 26 (blocBoucle)]
    $défaut  réduction par utilisation de la règle 26 (blocBoucle)

    corps       aller à l'état 9
    expr        aller à l'état 10
    binst       aller à l'état 11
    inst        aller à l'état 12
    binstsi     aller à l'état 13
    blocBoucle  aller à l'état 14


État 2

    0 $accept: prog . $end

    $end  décalage et aller à l'état 15


État 3

   12 inst: VARIABLE . AFFECTATION CONDITION
   13     | VARIABLE . AFFECTATION SECONDMEMBRE

    AFFECTATION  décalage et aller à l'état 16


État 4

   27 blocBoucle: TANTQUE . etiqueBoucle exp_bool debutboucle blocIntBoucle finboucle

    $défaut  réduction par utilisation de la règle 32 (etiqueBoucle)

    etiqueBoucle  aller à l'état 17


État 5

   21 binstsi: SI . CONDITION alo expr finsi
   22        | SI . CONDITION alo expr sino expr finsi

    '('  décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 36 (CONDITION)

    CONDITION  aller à l'état 19


État 6

   10 inst: LIRE . VARIABLE

    VARIABLE  décalage et aller à l'état 20


État 7

    9 inst: ECRIRE . VARIABLE

    VARIABLE  décalage et aller à l'état 21


État 8

   11 inst: COMPTER . VARIABLE

    VARIABLE  décalage et aller à l'état 22


État 9

    1 prog: DEBUTPROGRAMME corps . FINPROGRAMME

    FINPROGRAMME  décalage et aller à l'état 23


État 10

    2 corps: expr . corps
    3      | expr .

    VARIABLE  décalage et aller à l'état 3
    TANTQUE   décalage et aller à l'état 4
    SI        décalage et aller à l'état 5
    LIRE      décalage et aller à l'état 6
    ECRIRE    décalage et aller à l'état 7
    COMPTER   décalage et aller à l'état 8

    FINPROGRAMME  réduction par utilisation de la règle 3 (corps)
    FINPROGRAMME  [réduction par utilisation de la règle 26 (blocBoucle)]
    VARIABLE      [réduction par utilisation de la règle 26 (blocBoucle)]
    TANTQUE       [réduction par utilisation de la règle 26 (blocBoucle)]
    SI            [réduction par utilisation de la règle 26 (blocBoucle)]
    LIRE          [réduction par utilisation de la règle 26 (blocBoucle)]
    ECRIRE        [réduction par utilisation de la règle 26 (blocBoucle)]
    COMPTER       [réduction par utilisation de la règle 26 (blocBoucle)]
    $défaut      réduction par utilisation de la règle 3 (corps)

    corps       aller à l'état 24
    expr        aller à l'état 10
    binst       aller à l'état 11
    inst        aller à l'état 12
    binstsi     aller à l'état 13
    blocBoucle  aller à l'état 14


État 11

    4 expr: binst .

    $défaut  réduction par utilisation de la règle 4 (expr)


État 12

    7 binst: inst . SEPINSTR
    8      | inst . SEPINSTR binst

    SEPINSTR  décalage et aller à l'état 25


État 13

    5 expr: binstsi .

    $défaut  réduction par utilisation de la règle 5 (expr)


État 14

    6 expr: blocBoucle .

    $défaut  réduction par utilisation de la règle 6 (expr)


État 15

    0 $accept: prog $end .

    $défaut  accepter


État 16

   12 inst: VARIABLE AFFECTATION . CONDITION
   13     | VARIABLE AFFECTATION . SECONDMEMBRE

    NOMBRE    décalage et aller à l'état 26
    VARIABLE  décalage et aller à l'état 27
    '('       décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 36 (CONDITION)

    SECONDMEMBRE  aller à l'état 28
    T             aller à l'état 29
    TERME         aller à l'état 30
    CONDITION     aller à l'état 31


État 17

   27 blocBoucle: TANTQUE etiqueBoucle . exp_bool debutboucle blocIntBoucle finboucle

    '('  décalage et aller à l'état 18

    $défaut  réduction par utilisation de la règle 36 (CONDITION)

    exp_bool   aller à l'état 32
    CONDITION  aller à l'état 33


État 18

   37 CONDITION: '(' . TERME EGALE TERME ')'
   38          | '(' . TERME DIFFERENT TERME ')'
   39          | '(' . TERME INFERIEUR TERME ')'
   40          | '(' . TERME SUPERIEUR TERME ')'

    NOMBRE    décalage et aller à l'état 26
    VARIABLE  décalage et aller à l'état 27

    TERME  aller à l'état 34


État 19

   21 binstsi: SI CONDITION . alo expr finsi
   22        | SI CONDITION . alo expr sino expr finsi

    ALORS  décalage et aller à l'état 35

    alo  aller à l'état 36


État 20

   10 inst: LIRE VARIABLE .

    $défaut  réduction par utilisation de la règle 10 (inst)


État 21

    9 inst: ECRIRE VARIABLE .

    $défaut  réduction par utilisation de la règle 9 (inst)


État 22

   11 inst: COMPTER VARIABLE .

    $défaut  réduction par utilisation de la règle 11 (inst)


État 23

    1 prog: DEBUTPROGRAMME corps FINPROGRAMME .

    $défaut  réduction par utilisation de la règle 1 (prog)


État 24

    2 corps: expr corps .

    $défaut  réduction par utilisation de la règle 2 (corps)


État 25

    7 binst: inst SEPINSTR .
    8      | inst SEPINSTR . binst

    VARIABLE  décalage et aller à l'état 3
    LIRE      décalage et aller à l'état 6
    ECRIRE    décalage et aller à l'état 7
    COMPTER   décalage et aller à l'état 8

    VARIABLE  [réduction par utilisation de la règle 7 (binst)]
    LIRE      [réduction par utilisation de la règle 7 (binst)]
    ECRIRE    [réduction par utilisation de la règle 7 (binst)]
    COMPTER   [réduction par utilisation de la règle 7 (binst)]
    $défaut  réduction par utilisation de la règle 7 (binst)

    binst  aller à l'état 37
    inst   aller à l'état 12


État 26

   20 TERME: NOMBRE .

    $défaut  réduction par utilisation de la règle 20 (TERME)


État 27

   19 TERME: VARIABLE .

    $défaut  réduction par utilisation de la règle 19 (TERME)


État 28

   13 inst: VARIABLE AFFECTATION SECONDMEMBRE .
   15 SECONDMEMBRE: SECONDMEMBRE . PLUS T

    PLUS  décalage et aller à l'état 38

    $défaut  réduction par utilisation de la règle 13 (inst)


État 29

   14 SECONDMEMBRE: T .
   17 T: T . FOIS TERME
   18  | T . MODULO TERME

    FOIS    décalage et aller à l'état 39
    MODULO  décalage et aller à l'état 40

    $défaut  réduction par utilisation de la règle 14 (SECONDMEMBRE)


État 30

   16 T: TERME .

    $défaut  réduction par utilisation de la règle 16 (T)


État 31

   12 inst: VARIABLE AFFECTATION CONDITION .

    $défaut  réduction par utilisation de la règle 12 (inst)


État 32

   27 blocBoucle: TANTQUE etiqueBoucle exp_bool . debutboucle blocIntBoucle finboucle

    FAIRE  décalage et aller à l'état 41

    debutboucle  aller à l'état 42


État 33

   34 exp_bool: CONDITION .

    $défaut  réduction par utilisation de la règle 34 (exp_bool)


État 34

   37 CONDITION: '(' TERME . EGALE TERME ')'
   38          | '(' TERME . DIFFERENT TERME ')'
   39          | '(' TERME . INFERIEUR TERME ')'
   40          | '(' TERME . SUPERIEUR TERME ')'

    EGALE      décalage et aller à l'état 43
    SUPERIEUR  décalage et aller à l'état 44
    INFERIEUR  décalage et aller à l'état 45
    DIFFERENT  décalage et aller à l'état 46


État 35

   24 alo: ALORS .

    $défaut  réduction par utilisation de la règle 24 (alo)


État 36

   21 binstsi: SI CONDITION alo . expr finsi
   22        | SI CONDITION alo . expr sino expr finsi

    VARIABLE  décalage et aller à l'état 3
    TANTQUE   décalage et aller à l'état 4
    SI        décalage et aller à l'état 5
    LIRE      décalage et aller à l'état 6
    ECRIRE    décalage et aller à l'état 7
    COMPTER   décalage et aller à l'état 8

    $défaut  réduction par utilisation de la règle 26 (blocBoucle)

    expr        aller à l'état 47
    binst       aller à l'état 11
    inst        aller à l'état 12
    binstsi     aller à l'état 13
    blocBoucle  aller à l'état 14


État 37

    8 binst: inst SEPINSTR binst .

    $défaut  réduction par utilisation de la règle 8 (binst)


État 38

   15 SECONDMEMBRE: SECONDMEMBRE PLUS . T

    NOMBRE    décalage et aller à l'état 26
    VARIABLE  décalage et aller à l'état 27

    T      aller à l'état 48
    TERME  aller à l'état 30


État 39

   17 T: T FOIS . TERME

    NOMBRE    décalage et aller à l'état 26
    VARIABLE  décalage et aller à l'état 27

    TERME  aller à l'état 49


État 40

   18 T: T MODULO . TERME

    NOMBRE    décalage et aller à l'état 26
    VARIABLE  décalage et aller à l'état 27

    TERME  aller à l'état 50


État 41

   33 debutboucle: FAIRE .

    $défaut  réduction par utilisation de la règle 33 (debutboucle)


État 42

   27 blocBoucle: TANTQUE etiqueBoucle exp_bool debutboucle . blocIntBoucle finboucle

    VARIABLE  décalage et aller à l'état 3
    SI        décalage et aller à l'état 5
    LIRE      décalage et aller à l'état 6
    ECRIRE    décalage et aller à l'état 7
    COMPTER   décalage et aller à l'état 8

    binst          aller à l'état 51
    inst           aller à l'état 12
    binstsi        aller à l'état 52
    blocIntBoucle  aller à l'état 53


État 43

   37 CONDITION: '(' TERME EGALE . TERME ')'

    NOMBRE    décalage et aller à l'état 26
    VARIABLE  décalage et aller à l'état 27

    TERME  aller à l'état 54


État 44

   40 CONDITION: '(' TERME SUPERIEUR . TERME ')'

    NOMBRE    décalage et aller à l'état 26
    VARIABLE  décalage et aller à l'état 27

    TERME  aller à l'état 55


État 45

   39 CONDITION: '(' TERME INFERIEUR . TERME ')'

    NOMBRE    décalage et aller à l'état 26
    VARIABLE  décalage et aller à l'état 27

    TERME  aller à l'état 56


État 46

   38 CONDITION: '(' TERME DIFFERENT . TERME ')'

    NOMBRE    décalage et aller à l'état 26
    VARIABLE  décalage et aller à l'état 27

    TERME  aller à l'état 57


État 47

   21 binstsi: SI CONDITION alo expr . finsi
   22        | SI CONDITION alo expr . sino expr finsi

    FSI    décalage et aller à l'état 58
    SINON  décalage et aller à l'état 59

    finsi  aller à l'état 60
    sino   aller à l'état 61


État 48

   15 SECONDMEMBRE: SECONDMEMBRE PLUS T .
   17 T: T . FOIS TERME
   18  | T . MODULO TERME

    FOIS    décalage et aller à l'état 39
    MODULO  décalage et aller à l'état 40

    $défaut  réduction par utilisation de la règle 15 (SECONDMEMBRE)


État 49

   17 T: T FOIS TERME .

    $défaut  réduction par utilisation de la règle 17 (T)


État 50

   18 T: T MODULO TERME .

    $défaut  réduction par utilisation de la règle 18 (T)


État 51

   28 blocIntBoucle: binst .
   31              | binst . blocIntBoucle

    VARIABLE  décalage et aller à l'état 3
    SI        décalage et aller à l'état 5
    LIRE      décalage et aller à l'état 6
    ECRIRE    décalage et aller à l'état 7
    COMPTER   décalage et aller à l'état 8

    $défaut  réduction par utilisation de la règle 28 (blocIntBoucle)

    binst          aller à l'état 51
    inst           aller à l'état 12
    binstsi        aller à l'état 52
    blocIntBoucle  aller à l'état 62


État 52

   29 blocIntBoucle: binstsi .
   30              | binstsi . blocIntBoucle

    VARIABLE  décalage et aller à l'état 3
    SI        décalage et aller à l'état 5
    LIRE      décalage et aller à l'état 6
    ECRIRE    décalage et aller à l'état 7
    COMPTER   décalage et aller à l'état 8

    $défaut  réduction par utilisation de la règle 29 (blocIntBoucle)

    binst          aller à l'état 51
    inst           aller à l'état 12
    binstsi        aller à l'état 52
    blocIntBoucle  aller à l'état 63


État 53

   27 blocBoucle: TANTQUE etiqueBoucle exp_bool debutboucle blocIntBoucle . finboucle

    FAIT  décalage et aller à l'état 64

    finboucle  aller à l'état 65


État 54

   37 CONDITION: '(' TERME EGALE TERME . ')'

    ')'  décalage et aller à l'état 66


État 55

   40 CONDITION: '(' TERME SUPERIEUR TERME . ')'

    ')'  décalage et aller à l'état 67


État 56

   39 CONDITION: '(' TERME INFERIEUR TERME . ')'

    ')'  décalage et aller à l'état 68


État 57

   38 CONDITION: '(' TERME DIFFERENT TERME . ')'

    ')'  décalage et aller à l'état 69


État 58

   23 finsi: FSI .

    $défaut  réduction par utilisation de la règle 23 (finsi)


État 59

   25 sino: SINON .

    $défaut  réduction par utilisation de la règle 25 (sino)


État 60

   21 binstsi: SI CONDITION alo expr finsi .

    $défaut  réduction par utilisation de la règle 21 (binstsi)


État 61

   22 binstsi: SI CONDITION alo expr sino . expr finsi

    VARIABLE  décalage et aller à l'état 3
    TANTQUE   décalage et aller à l'état 4
    SI        décalage et aller à l'état 5
    LIRE      décalage et aller à l'état 6
    ECRIRE    décalage et aller à l'état 7
    COMPTER   décalage et aller à l'état 8

    $défaut  réduction par utilisation de la règle 26 (blocBoucle)

    expr        aller à l'état 70
    binst       aller à l'état 11
    inst        aller à l'état 12
    binstsi     aller à l'état 13
    blocBoucle  aller à l'état 14


État 62

   31 blocIntBoucle: binst blocIntBoucle .

    $défaut  réduction par utilisation de la règle 31 (blocIntBoucle)


État 63

   30 blocIntBoucle: binstsi blocIntBoucle .

    $défaut  réduction par utilisation de la règle 30 (blocIntBoucle)


État 64

   35 finboucle: FAIT .

    $défaut  réduction par utilisation de la règle 35 (finboucle)


État 65

   27 blocBoucle: TANTQUE etiqueBoucle exp_bool debutboucle blocIntBoucle finboucle .

    $défaut  réduction par utilisation de la règle 27 (blocBoucle)


État 66

   37 CONDITION: '(' TERME EGALE TERME ')' .

    $défaut  réduction par utilisation de la règle 37 (CONDITION)


État 67

   40 CONDITION: '(' TERME SUPERIEUR TERME ')' .

    $défaut  réduction par utilisation de la règle 40 (CONDITION)


État 68

   39 CONDITION: '(' TERME INFERIEUR TERME ')' .

    $défaut  réduction par utilisation de la règle 39 (CONDITION)


État 69

   38 CONDITION: '(' TERME DIFFERENT TERME ')' .

    $défaut  réduction par utilisation de la règle 38 (CONDITION)


État 70

   22 binstsi: SI CONDITION alo expr sino expr . finsi

    FSI  décalage et aller à l'état 58

    finsi  aller à l'état 71


État 71

   22 binstsi: SI CONDITION alo expr sino expr finsi .

    $défaut  réduction par utilisation de la règle 22 (binstsi)
